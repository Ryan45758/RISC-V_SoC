/*-----------------------------------------------------*/
// axi_1to2_mon.sv is generated by ./gen_axi_mon.sh
//
//                                         2021-10-12
//                                           00:24:23
/*-----------------------------------------------------*/

module axi_1to2_mon (
    input                  aclk,
    input                  aresetn,
    input         [  1: 0] m0_awburst,
    input         [  9: 0] m0_awid,
    input         [ 31: 0] m0_awaddr,
    input         [  2: 0] m0_awsize,
    input         [  7: 0] m0_awlen,
    input                  m0_awvalid,
    input                  m0_awready,
    input         [  3: 0] m0_wstrb,
    input         [  9: 0] m0_wid,
    input         [ 31: 0] m0_wdata,
    input                  m0_wlast,
    input                  m0_wvalid,
    input                  m0_wready,
    input         [  9: 0] m0_bid,
    input         [  1: 0] m0_bresp,
    input                  m0_bvalid,
    input                  m0_bready,
    input         [ 31: 0] m0_araddr,
    input         [  1: 0] m0_arburst,
    input         [  2: 0] m0_arsize,
    input         [  9: 0] m0_arid,
    input         [  7: 0] m0_arlen,
    input                  m0_arvalid,
    input                  m0_arready,
    input         [ 31: 0] m0_rdata,
    input         [  1: 0] m0_rresp,
    input         [  9: 0] m0_rid,
    input                  m0_rlast,
    input                  m0_rvalid,
    input                  m0_rready,
    input         [  1: 0] s0_awburst,
    input         [  9: 0] s0_awid,
    input         [ 31: 0] s0_awaddr,
    input         [  2: 0] s0_awsize,
    input         [  7: 0] s0_awlen,
    input                  s0_awvalid,
    input                  s0_awready,
    input         [  3: 0] s0_wstrb,
    input         [  9: 0] s0_wid,
    input         [ 31: 0] s0_wdata,
    input                  s0_wlast,
    input                  s0_wvalid,
    input                  s0_wready,
    input         [  9: 0] s0_bid,
    input         [  1: 0] s0_bresp,
    input                  s0_bvalid,
    input                  s0_bready,
    input         [ 31: 0] s0_araddr,
    input         [  1: 0] s0_arburst,
    input         [  2: 0] s0_arsize,
    input         [  9: 0] s0_arid,
    input         [  7: 0] s0_arlen,
    input                  s0_arvalid,
    input                  s0_arready,
    input         [ 31: 0] s0_rdata,
    input         [  1: 0] s0_rresp,
    input         [  9: 0] s0_rid,
    input                  s0_rlast,
    input                  s0_rvalid,
    input                  s0_rready,
    input         [  1: 0] s1_awburst,
    input         [  9: 0] s1_awid,
    input         [ 31: 0] s1_awaddr,
    input         [  2: 0] s1_awsize,
    input         [  7: 0] s1_awlen,
    input                  s1_awvalid,
    input                  s1_awready,
    input         [  3: 0] s1_wstrb,
    input         [  9: 0] s1_wid,
    input         [ 31: 0] s1_wdata,
    input                  s1_wlast,
    input                  s1_wvalid,
    input                  s1_wready,
    input         [  9: 0] s1_bid,
    input         [  1: 0] s1_bresp,
    input                  s1_bvalid,
    input                  s1_bready,
    input         [ 31: 0] s1_araddr,
    input         [  1: 0] s1_arburst,
    input         [  2: 0] s1_arsize,
    input         [  9: 0] s1_arid,
    input         [  7: 0] s1_arlen,
    input                  s1_arvalid,
    input                  s1_arready,
    input         [ 31: 0] s1_rdata,
    input         [  1: 0] s1_rresp,
    input         [  9: 0] s1_rid,
    input                  s1_rlast,
    input                  s1_rvalid,
    input                  s1_rready
);

string errmsg;
bit    errflag;

parameter AW_PAYLD_WIDTH = 0 + 2 + 10 + 32 + 3 + 8;
parameter W_PAYLD_WIDTH  = 0 + 4 + 10 + 32 + 1;
parameter B_PAYLD_WIDTH  = 10 + 2;
parameter AR_PAYLD_WIDTH = 0 + 32 + 2 + 3 + 10 + 8;
parameter R_PAYLD_WIDTH  = 32 + 2 + 10 + 1;
endmodule
