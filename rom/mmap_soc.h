// Memory Mapped Defination
#ifndef UINT32P
#define UINT32P volatile unsigned int *
#endif
#ifndef UINT64P
#define UINT64P volatile unsigned long long *
#endif

// ==============================
//  BROM_BASE
// ==============================
#define BROM_BASE 0x00000000

// ==============================
//  SRAM_BASE
// ==============================
#define SRAM_BASE 0x00020000

// ==============================
//  CFGREG_BASE
// ==============================
#define CFGREG_BASE 0x04000000
#define CFGREG_PWR_CON (CFGREG_BASE + 0x000)
#define CFGREG_PWR_CON_32P ((UINT32P) (CFGREG_BASE + 0x000))
#define CFGREG_PWR_CON_64P ((UINT64P) (CFGREG_BASE + 0x000))
#define CFGREG_RSTVEC (CFGREG_BASE + 0x004)
#define CFGREG_RSTVEC_32P ((UINT32P) (CFGREG_BASE + 0x004))
#define CFGREG_RSTVEC_64P ((UINT64P) (CFGREG_BASE + 0x004))
#define CFGREG_DDROFFSET (CFGREG_BASE + 0x008)
#define CFGREG_DDROFFSET_32P ((UINT32P) (CFGREG_BASE + 0x008))
#define CFGREG_DDROFFSET_64P ((UINT64P) (CFGREG_BASE + 0x008))
#define CFGREG_RSVREG0 (CFGREG_BASE + 0x010)
#define CFGREG_RSVREG0_32P ((UINT32P) (CFGREG_BASE + 0x010))
#define CFGREG_RSVREG0_64P ((UINT64P) (CFGREG_BASE + 0x010))
#define CFGREG_RSVREG1 (CFGREG_BASE + 0x014)
#define CFGREG_RSVREG1_32P ((UINT32P) (CFGREG_BASE + 0x014))
#define CFGREG_RSVREG1_64P ((UINT64P) (CFGREG_BASE + 0x014))
#define CFGREG_VER (CFGREG_BASE + 0x018)
#define CFGREG_VER_32P ((UINT32P) (CFGREG_BASE + 0x018))
#define CFGREG_VER_64P ((UINT64P) (CFGREG_BASE + 0x018))

// ==============================
//  DBGMON_BASE
// ==============================
#define DBGMON_BASE 0x04002000
#define DBGMON_PC (DBGMON_BASE + 0x1000)
#define DBGMON_PC_32P ((UINT32P) (DBGMON_BASE + 0x1000))
#define DBGMON_PC_64P ((UINT64P) (DBGMON_BASE + 0x1000))
#define DBGMON_X1 (DBGMON_BASE + 0x1008)
#define DBGMON_X1_32P ((UINT32P) (DBGMON_BASE + 0x1008))
#define DBGMON_X1_64P ((UINT64P) (DBGMON_BASE + 0x1008))
#define DBGMON_X2 (DBGMON_BASE + 0x1010)
#define DBGMON_X2_32P ((UINT32P) (DBGMON_BASE + 0x1010))
#define DBGMON_X2_64P ((UINT64P) (DBGMON_BASE + 0x1010))
#define DBGMON_X3 (DBGMON_BASE + 0x1018)
#define DBGMON_X3_32P ((UINT32P) (DBGMON_BASE + 0x1018))
#define DBGMON_X3_64P ((UINT64P) (DBGMON_BASE + 0x1018))
#define DBGMON_X4 (DBGMON_BASE + 0x1020)
#define DBGMON_X4_32P ((UINT32P) (DBGMON_BASE + 0x1020))
#define DBGMON_X4_64P ((UINT64P) (DBGMON_BASE + 0x1020))
#define DBGMON_X5 (DBGMON_BASE + 0x1028)
#define DBGMON_X5_32P ((UINT32P) (DBGMON_BASE + 0x1028))
#define DBGMON_X5_64P ((UINT64P) (DBGMON_BASE + 0x1028))
#define DBGMON_X6 (DBGMON_BASE + 0x1030)
#define DBGMON_X6_32P ((UINT32P) (DBGMON_BASE + 0x1030))
#define DBGMON_X6_64P ((UINT64P) (DBGMON_BASE + 0x1030))
#define DBGMON_X7 (DBGMON_BASE + 0x1038)
#define DBGMON_X7_32P ((UINT32P) (DBGMON_BASE + 0x1038))
#define DBGMON_X7_64P ((UINT64P) (DBGMON_BASE + 0x1038))
#define DBGMON_X8 (DBGMON_BASE + 0x1040)
#define DBGMON_X8_32P ((UINT32P) (DBGMON_BASE + 0x1040))
#define DBGMON_X8_64P ((UINT64P) (DBGMON_BASE + 0x1040))
#define DBGMON_X9 (DBGMON_BASE + 0x1048)
#define DBGMON_X9_32P ((UINT32P) (DBGMON_BASE + 0x1048))
#define DBGMON_X9_64P ((UINT64P) (DBGMON_BASE + 0x1048))
#define DBGMON_X10 (DBGMON_BASE + 0x1050)
#define DBGMON_X10_32P ((UINT32P) (DBGMON_BASE + 0x1050))
#define DBGMON_X10_64P ((UINT64P) (DBGMON_BASE + 0x1050))
#define DBGMON_X11 (DBGMON_BASE + 0x1058)
#define DBGMON_X11_32P ((UINT32P) (DBGMON_BASE + 0x1058))
#define DBGMON_X11_64P ((UINT64P) (DBGMON_BASE + 0x1058))
#define DBGMON_X12 (DBGMON_BASE + 0x1060)
#define DBGMON_X12_32P ((UINT32P) (DBGMON_BASE + 0x1060))
#define DBGMON_X12_64P ((UINT64P) (DBGMON_BASE + 0x1060))
#define DBGMON_X13 (DBGMON_BASE + 0x1068)
#define DBGMON_X13_32P ((UINT32P) (DBGMON_BASE + 0x1068))
#define DBGMON_X13_64P ((UINT64P) (DBGMON_BASE + 0x1068))
#define DBGMON_X14 (DBGMON_BASE + 0x1070)
#define DBGMON_X14_32P ((UINT32P) (DBGMON_BASE + 0x1070))
#define DBGMON_X14_64P ((UINT64P) (DBGMON_BASE + 0x1070))
#define DBGMON_X15 (DBGMON_BASE + 0x1078)
#define DBGMON_X15_32P ((UINT32P) (DBGMON_BASE + 0x1078))
#define DBGMON_X15_64P ((UINT64P) (DBGMON_BASE + 0x1078))
#define DBGMON_X16 (DBGMON_BASE + 0x1080)
#define DBGMON_X16_32P ((UINT32P) (DBGMON_BASE + 0x1080))
#define DBGMON_X16_64P ((UINT64P) (DBGMON_BASE + 0x1080))
#define DBGMON_X17 (DBGMON_BASE + 0x1088)
#define DBGMON_X17_32P ((UINT32P) (DBGMON_BASE + 0x1088))
#define DBGMON_X17_64P ((UINT64P) (DBGMON_BASE + 0x1088))
#define DBGMON_X18 (DBGMON_BASE + 0x1090)
#define DBGMON_X18_32P ((UINT32P) (DBGMON_BASE + 0x1090))
#define DBGMON_X18_64P ((UINT64P) (DBGMON_BASE + 0x1090))
#define DBGMON_X19 (DBGMON_BASE + 0x1098)
#define DBGMON_X19_32P ((UINT32P) (DBGMON_BASE + 0x1098))
#define DBGMON_X19_64P ((UINT64P) (DBGMON_BASE + 0x1098))
#define DBGMON_X20 (DBGMON_BASE + 0x10a0)
#define DBGMON_X20_32P ((UINT32P) (DBGMON_BASE + 0x10a0))
#define DBGMON_X20_64P ((UINT64P) (DBGMON_BASE + 0x10a0))
#define DBGMON_X21 (DBGMON_BASE + 0x10a8)
#define DBGMON_X21_32P ((UINT32P) (DBGMON_BASE + 0x10a8))
#define DBGMON_X21_64P ((UINT64P) (DBGMON_BASE + 0x10a8))
#define DBGMON_X22 (DBGMON_BASE + 0x10b0)
#define DBGMON_X22_32P ((UINT32P) (DBGMON_BASE + 0x10b0))
#define DBGMON_X22_64P ((UINT64P) (DBGMON_BASE + 0x10b0))
#define DBGMON_X23 (DBGMON_BASE + 0x10b8)
#define DBGMON_X23_32P ((UINT32P) (DBGMON_BASE + 0x10b8))
#define DBGMON_X23_64P ((UINT64P) (DBGMON_BASE + 0x10b8))
#define DBGMON_X24 (DBGMON_BASE + 0x10c0)
#define DBGMON_X24_32P ((UINT32P) (DBGMON_BASE + 0x10c0))
#define DBGMON_X24_64P ((UINT64P) (DBGMON_BASE + 0x10c0))
#define DBGMON_X25 (DBGMON_BASE + 0x10c8)
#define DBGMON_X25_32P ((UINT32P) (DBGMON_BASE + 0x10c8))
#define DBGMON_X25_64P ((UINT64P) (DBGMON_BASE + 0x10c8))
#define DBGMON_X26 (DBGMON_BASE + 0x10d0)
#define DBGMON_X26_32P ((UINT32P) (DBGMON_BASE + 0x10d0))
#define DBGMON_X26_64P ((UINT64P) (DBGMON_BASE + 0x10d0))
#define DBGMON_X27 (DBGMON_BASE + 0x10d8)
#define DBGMON_X27_32P ((UINT32P) (DBGMON_BASE + 0x10d8))
#define DBGMON_X27_64P ((UINT64P) (DBGMON_BASE + 0x10d8))
#define DBGMON_X28 (DBGMON_BASE + 0x10e0)
#define DBGMON_X28_32P ((UINT32P) (DBGMON_BASE + 0x10e0))
#define DBGMON_X28_64P ((UINT64P) (DBGMON_BASE + 0x10e0))
#define DBGMON_X29 (DBGMON_BASE + 0x10e8)
#define DBGMON_X29_32P ((UINT32P) (DBGMON_BASE + 0x10e8))
#define DBGMON_X29_64P ((UINT64P) (DBGMON_BASE + 0x10e8))
#define DBGMON_X30 (DBGMON_BASE + 0x10f0)
#define DBGMON_X30_32P ((UINT32P) (DBGMON_BASE + 0x10f0))
#define DBGMON_X30_64P ((UINT64P) (DBGMON_BASE + 0x10f0))
#define DBGMON_X31 (DBGMON_BASE + 0x10f8)
#define DBGMON_X31_32P ((UINT32P) (DBGMON_BASE + 0x10f8))
#define DBGMON_X31_64P ((UINT64P) (DBGMON_BASE + 0x10f8))
#define DBGMON_BP0 (DBGMON_BASE + 0x1100)
#define DBGMON_BP0_32P ((UINT32P) (DBGMON_BASE + 0x1100))
#define DBGMON_BP0_64P ((UINT64P) (DBGMON_BASE + 0x1100))
#define DBGMON_BP1 (DBGMON_BASE + 0x1108)
#define DBGMON_BP1_32P ((UINT32P) (DBGMON_BASE + 0x1108))
#define DBGMON_BP1_64P ((UINT64P) (DBGMON_BASE + 0x1108))
#define DBGMON_BP2 (DBGMON_BASE + 0x1110)
#define DBGMON_BP2_32P ((UINT32P) (DBGMON_BASE + 0x1110))
#define DBGMON_BP2_64P ((UINT64P) (DBGMON_BASE + 0x1110))
#define DBGMON_BP3 (DBGMON_BASE + 0x1118)
#define DBGMON_BP3_32P ((UINT32P) (DBGMON_BASE + 0x1118))
#define DBGMON_BP3_64P ((UINT64P) (DBGMON_BASE + 0x1118))
#define DBGMON_WP0 (DBGMON_BASE + 0x1120)
#define DBGMON_WP0_32P ((UINT32P) (DBGMON_BASE + 0x1120))
#define DBGMON_WP0_64P ((UINT64P) (DBGMON_BASE + 0x1120))
#define DBGMON_WP1 (DBGMON_BASE + 0x1128)
#define DBGMON_WP1_32P ((UINT32P) (DBGMON_BASE + 0x1128))
#define DBGMON_WP1_64P ((UINT64P) (DBGMON_BASE + 0x1128))
#define DBGMON_WP2 (DBGMON_BASE + 0x1130)
#define DBGMON_WP2_32P ((UINT32P) (DBGMON_BASE + 0x1130))
#define DBGMON_WP2_64P ((UINT64P) (DBGMON_BASE + 0x1130))
#define DBGMON_WP3 (DBGMON_BASE + 0x1138)
#define DBGMON_WP3_32P ((UINT32P) (DBGMON_BASE + 0x1138))
#define DBGMON_WP3_64P ((UINT64P) (DBGMON_BASE + 0x1138))
#define DBGMON_VC_EXC (DBGMON_BASE + 0x1140)
#define DBGMON_VC_EXC_32P ((UINT32P) (DBGMON_BASE + 0x1140))
#define DBGMON_VC_EXC_64P ((UINT64P) (DBGMON_BASE + 0x1140))
#define DBGMON_VC_IRQ (DBGMON_BASE + 0x1144)
#define DBGMON_VC_IRQ_32P ((UINT32P) (DBGMON_BASE + 0x1144))
#define DBGMON_VC_IRQ_64P ((UINT64P) (DBGMON_BASE + 0x1144))
#define DBGMON_DELAY (DBGMON_BASE + 0x1148)
#define DBGMON_DELAY_32P ((UINT32P) (DBGMON_BASE + 0x1148))
#define DBGMON_DELAY_64P ((UINT64P) (DBGMON_BASE + 0x1148))
#define DBGMON_STOP_TRACE (DBGMON_BASE + 0x114c)
#define DBGMON_STOP_TRACE_32P ((UINT32P) (DBGMON_BASE + 0x114c))
#define DBGMON_STOP_TRACE_64P ((UINT64P) (DBGMON_BASE + 0x114c))
#define DBGMON_IE (DBGMON_BASE + 0x1150)
#define DBGMON_IE_32P ((UINT32P) (DBGMON_BASE + 0x1150))
#define DBGMON_IE_64P ((UINT64P) (DBGMON_BASE + 0x1150))

// ==============================
//  CLINT_BASE
// ==============================
#define CLINT_BASE 0x08000000
#define CLINT_MSIP (CLINT_BASE + 0x0000)
#define CLINT_MSIP_32P ((UINT32P) (CLINT_BASE + 0x0000))
#define CLINT_MSIP_64P ((UINT64P) (CLINT_BASE + 0x0000))
#define CLINT_TIMECMP (CLINT_BASE + 0x4000)
#define CLINT_TIMECMP_32P ((UINT32P) (CLINT_BASE + 0x4000))
#define CLINT_TIMECMP_64P ((UINT64P) (CLINT_BASE + 0x4000))
#define CLINT_TIME (CLINT_BASE + 0xbff8)
#define CLINT_TIME_32P ((UINT32P) (CLINT_BASE + 0xbff8))
#define CLINT_TIME_64P ((UINT64P) (CLINT_BASE + 0xbff8))

// ==============================
//  PLIC_BASE
// ==============================
#define PLIC_BASE 0x0c000000
#define PLIC_INT_PRIOR (PLIC_BASE + 0x0000000)
#define PLIC_INT_PRIOR_32P ((UINT32P) (PLIC_BASE + 0x0000000))
#define PLIC_INT_PRIOR_64P ((UINT64P) (PLIC_BASE + 0x0000000))
#define PLIC_INT_PEND (PLIC_BASE + 0x0001000)
#define PLIC_INT_PEND_32P ((UINT32P) (PLIC_BASE + 0x0001000))
#define PLIC_INT_PEND_64P ((UINT64P) (PLIC_BASE + 0x0001000))
#define PLIC_INT_TYPE (PLIC_BASE + 0x0001080)
#define PLIC_INT_TYPE_32P ((UINT32P) (PLIC_BASE + 0x0001080))
#define PLIC_INT_TYPE_64P ((UINT64P) (PLIC_BASE + 0x0001080))
#define PLIC_INT_POL (PLIC_BASE + 0x0001100)
#define PLIC_INT_POL_32P ((UINT32P) (PLIC_BASE + 0x0001100))
#define PLIC_INT_POL_64P ((UINT64P) (PLIC_BASE + 0x0001100))
#define PLIC_INT_EN (PLIC_BASE + 0x0002000)
#define PLIC_INT_EN_32P ((UINT32P) (PLIC_BASE + 0x0002000))
#define PLIC_INT_EN_64P ((UINT64P) (PLIC_BASE + 0x0002000))
#define PLIC_PRIOR_TH (PLIC_BASE + 0x0200000)
#define PLIC_PRIOR_TH_32P ((UINT32P) (PLIC_BASE + 0x0200000))
#define PLIC_PRIOR_TH_64P ((UINT64P) (PLIC_BASE + 0x0200000))

// ==============================
//  UART_BASE
// ==============================
#define UART_BASE 0x10000000
#define UART_TXFIFO (UART_BASE + 0x00)
#define UART_TXFIFO_32P ((UINT32P) (UART_BASE + 0x00))
#define UART_TXFIFO_64P ((UINT64P) (UART_BASE + 0x00))
#define UART_RXFIFO (UART_BASE + 0x04)
#define UART_RXFIFO_32P ((UINT32P) (UART_BASE + 0x04))
#define UART_RXFIFO_64P ((UINT64P) (UART_BASE + 0x04))
#define UART_TXCTRL (UART_BASE + 0x08)
#define UART_TXCTRL_32P ((UINT32P) (UART_BASE + 0x08))
#define UART_TXCTRL_64P ((UINT64P) (UART_BASE + 0x08))
#define UART_RXCTRL (UART_BASE + 0x0C)
#define UART_RXCTRL_32P ((UINT32P) (UART_BASE + 0x0C))
#define UART_RXCTRL_64P ((UINT64P) (UART_BASE + 0x0C))
#define UART_IE (UART_BASE + 0x10)
#define UART_IE_32P ((UINT32P) (UART_BASE + 0x10))
#define UART_IE_64P ((UINT64P) (UART_BASE + 0x10))
#define UART_IP (UART_BASE + 0x14)
#define UART_IP_32P ((UINT32P) (UART_BASE + 0x14))
#define UART_IP_64P ((UINT64P) (UART_BASE + 0x14))
#define UART_IC (UART_BASE + 0x18)
#define UART_IC_32P ((UINT32P) (UART_BASE + 0x18))
#define UART_IC_64P ((UINT64P) (UART_BASE + 0x18))
#define UART_DIV (UART_BASE + 0x1C)
#define UART_DIV_32P ((UINT32P) (UART_BASE + 0x1C))
#define UART_DIV_64P ((UINT64P) (UART_BASE + 0x1C))
#define UART_LCR (UART_BASE + 0x20)
#define UART_LCR_32P ((UINT32P) (UART_BASE + 0x20))
#define UART_LCR_64P ((UINT64P) (UART_BASE + 0x20))

// ==============================
//  SPI_BASE
// ==============================
#define SPI_BASE 0x10001000
#define SPI_CR1 (SPI_BASE + 0x00)
#define SPI_CR1_32P ((UINT32P) (SPI_BASE + 0x00))
#define SPI_CR1_64P ((UINT64P) (SPI_BASE + 0x00))
#define SPI_CR2 (SPI_BASE + 0x04)
#define SPI_CR2_32P ((UINT32P) (SPI_BASE + 0x04))
#define SPI_CR2_64P ((UINT64P) (SPI_BASE + 0x04))
#define SPI_SR (SPI_BASE + 0x08)
#define SPI_SR_32P ((UINT32P) (SPI_BASE + 0x08))
#define SPI_SR_64P ((UINT64P) (SPI_BASE + 0x08))
#define SPI_DR (SPI_BASE + 0x0C)
#define SPI_DR_32P ((UINT32P) (SPI_BASE + 0x0C))
#define SPI_DR_64P ((UINT64P) (SPI_BASE + 0x0C))

// ==============================
//  DMA_BASE
// ==============================
#define DMA_BASE 0x10001800
#define DMA_SRC (DMA_BASE + 0x00)
#define DMA_SRC_32P ((UINT32P) (DMA_BASE + 0x00))
#define DMA_SRC_64P ((UINT64P) (DMA_BASE + 0x00))
#define DMA_DEST (DMA_BASE + 0x04)
#define DMA_DEST_32P ((UINT32P) (DMA_BASE + 0x04))
#define DMA_DEST_64P ((UINT64P) (DMA_BASE + 0x04))
#define DMA_LEN (DMA_BASE + 0x08)
#define DMA_LEN_32P ((UINT32P) (DMA_BASE + 0x08))
#define DMA_LEN_64P ((UINT64P) (DMA_BASE + 0x08))
#define DMA_CON (DMA_BASE + 0x0C)
#define DMA_CON_32P ((UINT32P) (DMA_BASE + 0x0C))
#define DMA_CON_64P ((UINT64P) (DMA_BASE + 0x0C))
#define DMA_IE (DMA_BASE + 0x10)
#define DMA_IE_32P ((UINT32P) (DMA_BASE + 0x10))
#define DMA_IE_64P ((UINT64P) (DMA_BASE + 0x10))
#define DMA_IP (DMA_BASE + 0x14)
#define DMA_IP_32P ((UINT32P) (DMA_BASE + 0x14))
#define DMA_IP_64P ((UINT64P) (DMA_BASE + 0x14))
#define DMA_IC (DMA_BASE + 0x18)
#define DMA_IC_32P ((UINT32P) (DMA_BASE + 0x18))
#define DMA_IC_64P ((UINT64P) (DMA_BASE + 0x18))
#define DMA_WDT_CNT (DMA_BASE + 0x1C)
#define DMA_WDT_CNT_32P ((UINT32P) (DMA_BASE + 0x1C))
#define DMA_WDT_CNT_64P ((UINT64P) (DMA_BASE + 0x1C))

// ==============================
//  MAC_BASE
// ==============================
#define MAC_BASE 0x10002000
#define MAC_RESET (MAC_BASE + 0x00)
#define MAC_RESET_32P ((UINT32P) (MAC_BASE + 0x00))
#define MAC_RESET_64P ((UINT64P) (MAC_BASE + 0x00))
#define MAC_TXLEN (MAC_BASE + 0x04)
#define MAC_TXLEN_32P ((UINT32P) (MAC_BASE + 0x04))
#define MAC_TXLEN_64P ((UINT64P) (MAC_BASE + 0x04))
#define MAC_TXFIFO (MAC_BASE + 0x08)
#define MAC_TXFIFO_32P ((UINT32P) (MAC_BASE + 0x08))
#define MAC_TXFIFO_64P ((UINT64P) (MAC_BASE + 0x08))
#define MAC_TXCTRL (MAC_BASE + 0x0C)
#define MAC_TXCTRL_32P ((UINT32P) (MAC_BASE + 0x0C))
#define MAC_TXCTRL_64P ((UINT64P) (MAC_BASE + 0x0C))
#define MAC_TXDIS (MAC_BASE + 0x10)
#define MAC_TXDIS_32P ((UINT32P) (MAC_BASE + 0x10))
#define MAC_TXDIS_64P ((UINT64P) (MAC_BASE + 0x10))
#define MAC_RXLEN (MAC_BASE + 0x14)
#define MAC_RXLEN_32P ((UINT32P) (MAC_BASE + 0x14))
#define MAC_RXLEN_64P ((UINT64P) (MAC_BASE + 0x14))
#define MAC_RXFIFO (MAC_BASE + 0x18)
#define MAC_RXFIFO_32P ((UINT32P) (MAC_BASE + 0x18))
#define MAC_RXFIFO_64P ((UINT64P) (MAC_BASE + 0x18))
#define MAC_RXCTRL (MAC_BASE + 0x1C)
#define MAC_RXCTRL_32P ((UINT32P) (MAC_BASE + 0x1C))
#define MAC_RXCTRL_64P ((UINT64P) (MAC_BASE + 0x1C))
#define MAC_RXDIS (MAC_BASE + 0x20)
#define MAC_RXDIS_32P ((UINT32P) (MAC_BASE + 0x20))
#define MAC_RXDIS_64P ((UINT64P) (MAC_BASE + 0x20))
#define MAC_IE (MAC_BASE + 0x24)
#define MAC_IE_32P ((UINT32P) (MAC_BASE + 0x24))
#define MAC_IE_64P ((UINT64P) (MAC_BASE + 0x24))
#define MAC_IP (MAC_BASE + 0x28)
#define MAC_IP_32P ((UINT32P) (MAC_BASE + 0x28))
#define MAC_IP_64P ((UINT64P) (MAC_BASE + 0x28))
#define MAC_IC (MAC_BASE + 0x2C)
#define MAC_IC_32P ((UINT32P) (MAC_BASE + 0x2C))
#define MAC_IC_64P ((UINT64P) (MAC_BASE + 0x2C))
#define MAC_MAC0 (MAC_BASE + 0x30)
#define MAC_MAC0_32P ((UINT32P) (MAC_BASE + 0x30))
#define MAC_MAC0_64P ((UINT64P) (MAC_BASE + 0x30))
#define MAC_MAC1 (MAC_BASE + 0x34)
#define MAC_MAC1_32P ((UINT32P) (MAC_BASE + 0x34))
#define MAC_MAC1_64P ((UINT64P) (MAC_BASE + 0x34))

// ==============================
//  DDR_BASE
// ==============================
#define DDR_BASE 0x80000000

// ==============================
//  TMDL_BASE
// ==============================
#define TMDL_BASE 0x87fff000
#define TMDL_TM_INFO (TMDL_BASE + 0x000)
#define TMDL_TM_INFO_32P ((UINT32P) (TMDL_BASE + 0x000))
#define TMDL_TM_INFO_64P ((UINT64P) (TMDL_BASE + 0x000))
#define TMDL_TM_ERROR (TMDL_BASE + 0x008)
#define TMDL_TM_ERROR_32P ((UINT32P) (TMDL_BASE + 0x008))
#define TMDL_TM_ERROR_64P ((UINT64P) (TMDL_BASE + 0x008))
#define TMDL_TM_ARGS (TMDL_BASE + 0x010)
#define TMDL_TM_ARGS_32P ((UINT32P) (TMDL_BASE + 0x010))
#define TMDL_TM_ARGS_64P ((UINT64P) (TMDL_BASE + 0x010))
#define TMDL_TM_SIMEND (TMDL_BASE + 0x018)
#define TMDL_TM_SIMEND_32P ((UINT32P) (TMDL_BASE + 0x018))
#define TMDL_TM_SIMEND_64P ((UINT64P) (TMDL_BASE + 0x018))
#define TMDL_TM_SD_SECT (TMDL_BASE + 0x020)
#define TMDL_TM_SD_SECT_32P ((UINT32P) (TMDL_BASE + 0x020))
#define TMDL_TM_SD_SECT_64P ((UINT64P) (TMDL_BASE + 0x020))
#define TMDL_TM_SD_DEST (TMDL_BASE + 0x028)
#define TMDL_TM_SD_DEST_32P ((UINT32P) (TMDL_BASE + 0x028))
#define TMDL_TM_SD_DEST_64P ((UINT64P) (TMDL_BASE + 0x028))
#define TMDL_TM_SD_RBLK (TMDL_BASE + 0x030)
#define TMDL_TM_SD_RBLK_32P ((UINT32P) (TMDL_BASE + 0x030))
#define TMDL_TM_SD_RBLK_64P ((UINT64P) (TMDL_BASE + 0x030))
#define TMDL_TM_ICACHE_FLUSH (TMDL_BASE + 0x040)
#define TMDL_TM_ICACHE_FLUSH_32P ((UINT32P) (TMDL_BASE + 0x040))
#define TMDL_TM_ICACHE_FLUSH_64P ((UINT64P) (TMDL_BASE + 0x040))
#define TMDL_TM_DCACHE_FLUSH (TMDL_BASE + 0x048)
#define TMDL_TM_DCACHE_FLUSH_32P ((UINT32P) (TMDL_BASE + 0x048))
#define TMDL_TM_DCACHE_FLUSH_64P ((UINT64P) (TMDL_BASE + 0x048))

